name: Build and test project
on: [push]

jobs:
  fake_deploy_cache_multi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          IMAGE="kuredoro/python_time_server"
          echo "::set-output name=tagged_image::${IMAGE}:${TAG}"
          echo "::set-output name=tag::${TAG}"
      - name: Set up Docker Buildx
        id: buildx
        # Use the action from the master, as we've seen some inconsistencies with @v1
        # Issue: https://github.com/docker/build-push-action/issues/286
        uses: docker/setup-buildx-action@master
        # Only worked for us with this option on
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: Build application image
        uses: docker/build-push-action@v2
        with:
          context: ./app_python
          file: ./app_python/Dockerfile
          load: true
          tags: ${{ steps.prep.outputs.tagged_image }}
          #cache-from: type=local,src=/tmp/.buildx-cache
          # Note the mode=max here
          # More: https://github.com/moby/buildkit#--export-cache-options
          # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
          #cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

      - name: Print docker images
        run: docker images

      - name: Create real Dockerfile.test
        run: |
          echo "FROM ${{ steps.prep.outputs.tagged_image }}" > _Dockerfile
          cat "app_python/Dockerfile.test" >> _Dockerfile

      - name: Build test image
        uses: docker/build-push-action@v2
        with:
          context: ./app_python
          file: ./_Dockerfile
          builder: default
          tags: ${{ steps.prep.outputs.tagged_image }}-test

      - name: Test
        run: |
          rm _Dockerfile
          docker images
          docker run --rm ${{ steps.prep.outputs.tagged_image }}-test
